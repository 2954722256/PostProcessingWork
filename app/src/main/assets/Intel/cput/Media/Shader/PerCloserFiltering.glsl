//--------------------------------------------------------------------------------------
// Copyright 2012 Intel Corporation
// All Rights Reserved
//
// Permission is granted to use, copy, distribute and prepare derivative works of this
// software for any purpose and without fee, provided, that the above copyright notice
// and this statement appear in all copies.  Intel makes no representations about the
// suitability of this software for any purpose.  THIS SOFTWARE IS PROVIDED "AS IS."
// INTEL SPECIFICALLY DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, AND ALL LIABILITY,
// INCLUDING CONSEQUENTIAL AND OTHER INDIRECT DAMAGES, FOR THE USE OF THIS SOFTWARE,
// INCLUDING LIABILITY FOR INFRINGEMENT OF ANY PROPRIETARY RIGHTS, AND INCLUDING THE
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  Intel does not
// assume any responsibility for any errors which may appear in this software nor any
// responsibility to update it.
//--------------------------------------------------------------------------------------
// Generated by ShaderGenerator.exe version 0.1
//--------------------------------------------------------------------------------------

#define SHADOW_MAP_TEXTURE_SIZE 2048

// calculate
// -------------------------------------
float2 texOffset( float u, float v )
{
	return float2( u * 1.0f/SHADOW_MAP_TEXTURE_SIZE, v * 1.0f/SHADOW_MAP_TEXTURE_SIZE );
}

// Percentage Closer filtering 4x4
// -------------------------------------
float PercentCloserFiltering(sampler2DShadow ShadowTexture, /*SamplerComparisonState ShadowSampler, float2 uvInvertY,*/ float3 lightUvZ)
{
	//4x4 PCF filtering
	float x, y;
	float sum = 0;
	for (y = -1.5; y <= 1.5; y += 1.0)
	{
	    for (x = -1.5; x <= 1.5; x += 1.0)
	    {
//	        sum += ShadowTexture.SampleCmp( ShadowSampler, uvInvertY + texOffset(x,y), lightUvZ );
            sum += texture(ShadowTexture, float3(lightUvZ.xy + texOffset(x, y), lightUvZ.z));
	    }
	}
	return sum / 16.0f;
}