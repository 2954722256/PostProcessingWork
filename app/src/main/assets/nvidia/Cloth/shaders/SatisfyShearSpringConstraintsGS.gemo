#include "Cloth_Common.glsl"

in VS_OUT
{
    Particle particle;
    Particle old_particle;
    vec3 normal;
}_input[];

layout (stream = 0) out uint Out_State;
layout (stream = 0) out vec3 Out_Position;

layout (lines_adjacency) in;
layout (points, max_vertices = 4) out;

void main()
{
    Particle particle[4] = Particle[4]
    (
        _input[0].particle,
        _input[1].particle,
        _input[2].particle,
        _input[3].particle
    );

    // Constraints enforcement
    if (id < NumSimulatedPrimitives) {
        if (Cut) {
            TestSpring(particle[0], STATE_BOTTOMRIGHT_CONNECTION, particle[3]);
            TestSpring(particle[1], STATE_BOTTOMLEFT_CONNECTION, particle[2]);

            // Maintain consistency within a quad
            if (!IsConnected(particle[0], STATE_BOTTOMRIGHT_CONNECTION) ||
                !IsConnected(particle[1], STATE_BOTTOMLEFT_CONNECTION)) {
                Disconnect(particle[0], STATE_BOTTOMRIGHT_CONNECTION);
                Disconnect(particle[1], STATE_BOTTOMLEFT_CONNECTION);
            }

            // Maintain consistency within a quad
            TestSpringQuad(particle);
        }
        SatisfyShearSpringConstraint(particle[0], STATE_BOTTOMRIGHT_CONNECTION, particle[3], DistanceAtRestXY);
        SatisfyShearSpringConstraint(particle[1], STATE_BOTTOMLEFT_CONNECTION, particle[2], DistanceAtRestXY);
    }

    // Emitting
    for (int i = 0; i < (id == LastPrimitiveIndex ? LastPrimitiveSize : 4); ++i)
    {
            Out_State = particle[i].State;
            Out_Position = particle[i].Position;

            EmitStreamVertex(0);
            EndStreamPrimitive(0);
    }
//        stream.Append(particle[i]);
}